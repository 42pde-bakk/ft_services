apiVersion: v1
kind: Service
metadata:
  name: telegraf-svc
  labels:
    app: telegraf-app
spec:
  # type: NodePort
  ports:
  - port: 4999
    # nodePort: 4999
    protocol: TCP
    name: http
  selector:
    app: telegraf-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegraf-deployment
  labels:
    app: telegraf-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: telegraf-app
  template:
    metadata:
      labels:
        app: telegraf-app
    spec:
      containers:
      - name: telegraf
        image: telegraf_alpine
        ports:
        - containerPort: 4999
        imagePullPolicy: Never
        volumeMounts:
        - name: dockersock
          mountPath: "/var/run/docker.sock"
        env:
          - name: INFLUX_USER
            value: telegraf
          - name: INFLUX_URL
            value: "http://influxdb-svc:8086"
          - name: INFLUX_SKIP_DATABASE_CREATION
            value: "false"
          - name: INFLUX_PASSWORD
            value: "pass"
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
      volumes:
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock


---

# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   name: influx:stats:viewer
#   labels:
#     rbac.authorization.k8s.io/aggregate-view-telegraf-stats: "true"
# rules:
#   - apiGroups: [""]
#     resources: ["nodes/proxy"]
#     verbs: ["get", "watch", "list"]

# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   name: telegraf
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: cluster-admin
# subjects:
# - kind: ServiceAccount
#   name: telegraf
#   namespace: default
# ---
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: telegraf
#   labels:
#     app: influxdb